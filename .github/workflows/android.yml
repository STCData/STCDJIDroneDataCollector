name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Instrumented tests
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC
      ENABLE_APP_VERSIONING: false

    steps:
      - uses: actions/checkout@v3
      
      - name: Enable KVM group perms
        run: |
            echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
            sudo udevadm control --reload-rules
            sudo udevadm trigger --name-match=kvm


      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '18'
          

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-
            
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run build with Gradle Wrapper
        run: ./gradlew build
      
      - name: Run test with Gradle Wrapper
        run: ./gradlew test

      - uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd

      - name: Generate AVD snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: aosp_atd
          arch: x86
          profile: Galaxy Nexus
          force-avd-creation: false
          emulator-options:  -gpu auto -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          channel: canary
          script: echo "Generated AVD snapshot for caching."

      - name: Run Android instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: aosp_atd
          arch: x86
          profile: Galaxy Nexus
          force-avd-creation: false
          emulator-options: -no-snapshot-save -gpu auto -noaudio -no-boot-anim -camera-back none
          channel: canary
          disable-linux-hw-accel: false
          script: |
            adb uninstall "com.stcdata.stcdronedatacollector.test"
            adb uninstall "com.stcdata.stcdronedatacollector"
            ./gradlew connectedCheck
            ./gradlew connectedAndroidTest
            mkdir build_gh_pages
            cd build_gh_pages && adb pull '/sdcard/clickAndWaitForWhile.mp4'

      - name: Build site
        run: |
          ls -R build_gh_pages/
          .github/tools/staticsitebuilder build_gh_pages/
          ls -R build_gh_pages/


      - name: Upload GH Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: build_gh_pages

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
